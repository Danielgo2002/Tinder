{"ast":null,"code":"var _jsxFileName = \"/Users/danielgoldenberg/TinderBack/TinderBack/tinder-frontend/src/signup.tsx\",\n  _s = $RefreshSig$();\nimport { FormControl, FormErrorMessage, FormHelperText, FormLabel, Input } from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Signup() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const handleInputChange = e => setInput(e.target.value);\n  const isError = input === \" \";\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    isInvalid: isError,\n    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"email\",\n      value: input,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), !isError ? /*#__PURE__*/_jsxDEV(FormHelperText, {\n      children: \"Enter valid email please.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n      children: \"Email is required.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(Signup, \"RL+Zbs2TIka0YpcBOJptmHqCgYA=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["FormControl","FormErrorMessage","FormHelperText","FormLabel","Input","useState","jsxDEV","_jsxDEV","Signup","_s","input","setInput","handleInputChange","e","target","value","isError","isInvalid","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["/Users/danielgoldenberg/TinderBack/TinderBack/tinder-frontend/src/signup.tsx"],"sourcesContent":["import {\n  FormControl,\n  FormErrorMessage,\n  FormHelperText,\n  FormLabel,\n  Input,\n  Text,\n} from \"@chakra-ui/react\";\nimport { useState } from \"react\";\n\nfunction Signup() {\n  const [input, setInput] = useState(\"\");\n\n  const handleInputChange = (e: any) => setInput(e.target.value);\n\n  const isError = input === \" \";\n  return (\n    <FormControl isInvalid={isError}>\n      <FormLabel>Email</FormLabel>\n      <Input type=\"email\" value={input} onChange={handleInputChange} />\n      {!isError ? (\n        <FormHelperText>Enter valid email please.</FormHelperText>\n      ) : (\n        <FormErrorMessage>Email is required.</FormErrorMessage>\n      )}\n    </FormControl>\n  );\n}\nexport default Signup;\n"],"mappings":";;AAAA,SACEA,WAAW,EACXC,gBAAgB,EAChBC,cAAc,EACdC,SAAS,EACTC,KAAK,QAEA,kBAAkB;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMO,iBAAiB,GAAIC,CAAM,IAAKF,QAAQ,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAE9D,MAAMC,OAAO,GAAGN,KAAK,KAAK,GAAG;EAC7B,oBACEH,OAAA,CAACP,WAAW;IAACiB,SAAS,EAAED,OAAQ;IAAAE,QAAA,gBAC9BX,OAAA,CAACJ,SAAS;MAAAe,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eAC5Bf,OAAA,CAACH,KAAK;MAACmB,IAAI,EAAC,OAAO;MAACR,KAAK,EAAEL,KAAM;MAACc,QAAQ,EAAEZ;IAAkB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAChE,CAACN,OAAO,gBACPT,OAAA,CAACL,cAAc;MAAAgB,QAAA,EAAC;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CAAC,gBAE1Df,OAAA,CAACN,gBAAgB;MAAAiB,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkB,CACvD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAElB;AAACb,EAAA,CAjBQD,MAAM;AAAAiB,EAAA,GAANjB,MAAM;AAkBf,eAAeA,MAAM;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}